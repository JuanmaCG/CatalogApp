[{"C:\\Users\\juanm\\Desktop\\PruebaTecnica\\catalog-app\\src\\index.js":"1","C:\\Users\\juanm\\Desktop\\PruebaTecnica\\catalog-app\\src\\App.js":"2","C:\\Users\\juanm\\Desktop\\PruebaTecnica\\catalog-app\\src\\serviceWorker.js":"3","C:\\Users\\juanm\\Desktop\\PruebaTecnica\\catalog-app\\src\\app\\store.js":"4","C:\\Users\\juanm\\Desktop\\PruebaTecnica\\catalog-app\\src\\app\\slices\\commitsSlice.js":"5","C:\\Users\\juanm\\Desktop\\PruebaTecnica\\catalog-app\\src\\features\\Containers\\ApiListContainer.js":"6","C:\\Users\\juanm\\Desktop\\PruebaTecnica\\catalog-app\\src\\features\\Components\\ApiDetails\\ApiDetailComponent.js":"7","C:\\Users\\juanm\\Desktop\\PruebaTecnica\\catalog-app\\src\\features\\Components\\Navbar\\NavbarComponent.js":"8"},{"size":644,"mtime":1611433722248,"results":"9","hashOfConfig":"10"},{"size":984,"mtime":1611491946000,"results":"11","hashOfConfig":"10"},{"size":5141,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":204,"mtime":1611412853438,"results":"13","hashOfConfig":"10"},{"size":1578,"mtime":1611503185142,"results":"14","hashOfConfig":"10"},{"size":1262,"mtime":1611495183596,"results":"15","hashOfConfig":"10"},{"size":2974,"mtime":1611504935202,"results":"16","hashOfConfig":"10"},{"size":369,"mtime":1611428434454,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"o7at3l",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"C:\\Users\\juanm\\Desktop\\PruebaTecnica\\catalog-app\\src\\index.js",[],["36","37"],"C:\\Users\\juanm\\Desktop\\PruebaTecnica\\catalog-app\\src\\App.js",[],"C:\\Users\\juanm\\Desktop\\PruebaTecnica\\catalog-app\\src\\serviceWorker.js",[],"C:\\Users\\juanm\\Desktop\\PruebaTecnica\\catalog-app\\src\\app\\store.js",[],"C:\\Users\\juanm\\Desktop\\PruebaTecnica\\catalog-app\\src\\app\\slices\\commitsSlice.js",["38"],"import { createSlice } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\nexport const initialState = {\r\n  loading: false,\r\n  hasErrors: false,\r\n  commits: [],\r\n};\r\n\r\nconst commitsSlice = createSlice({\r\n  name: \"commits\",\r\n  initialState,\r\n  reducers: {\r\n    getCommits: (state) => {\r\n      state.loading = true;\r\n    },\r\n\r\n    getCommitsSuccess: (state, { payload }) => {\r\n      state.commits = payload;\r\n      state.loading = false;\r\n      state.hasErrors = false;\r\n    },\r\n\r\n    getCommitsFailure: (state) => {\r\n      state.hasErrors = true;\r\n      state.loading = false;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  getCommits,\r\n  getCommitsSuccess,\r\n  getCommitsFailure,\r\n} = commitsSlice.actions;\r\n\r\nexport const commitSelector = (state) => state.commits;\r\n\r\nexport default commitsSlice.reducer;\r\n\r\nexport function fetchCommits() {\r\n  return async (dispatch) => {\r\n    dispatch(getCommits());\r\n\r\n    let data = [];\r\n\r\n    axios\r\n      .get(\"https://api.github.com/repositories/19438/commits\")\r\n      .then((response) => {\r\n        response.data.map((commitResponse) => {\r\n          data.push({\r\n            id: commitResponse.sha,\r\n            author: commitResponse.commit.author,\r\n            commiter: commitResponse.commit.committer,\r\n            message: commitResponse.commit.message,\r\n            authorPage: commitResponse.author.html_url,\r\n            authorImg: commitResponse.author.avatar_url\r\n          });\r\n        });\r\n        dispatch(getCommitsSuccess(data));\r\n      })\r\n      .catch(() => {\r\n        dispatch(getCommitsFailure());\r\n      });\r\n  };\r\n}\r\n\r\n","C:\\Users\\juanm\\Desktop\\PruebaTecnica\\catalog-app\\src\\features\\Containers\\ApiListContainer.js",[],"C:\\Users\\juanm\\Desktop\\PruebaTecnica\\catalog-app\\src\\features\\Components\\ApiDetails\\ApiDetailComponent.js",[],"C:\\Users\\juanm\\Desktop\\PruebaTecnica\\catalog-app\\src\\features\\Components\\Navbar\\NavbarComponent.js",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":50,"column":44,"nodeType":"45","messageId":"46","endLine":50,"endColumn":46},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]